{"version":3,"sources":["Base/Navbar.js","Cook/RecipeRow.js","Cook/Cook.js","Learn/LearnCol.js","Learn/Learn.js","Base/PageNotFound.js","Cook/SingleRecipePage.js","Learn/SingleLearn.js","Create/Create.js","App.js","index.js"],"names":["colourChangeClick","id","document","getElementById","style","backgroundColor","currentID","color","colourChangeHover","colourChangeOff","Navbar","className","fontWeight","href","onClick","e","target","onMouseOver","onMouseOut","placeholder","type","name","RecipeRow","props","filterType","recipeListJSON","filter","recipe","trending","favourite","map","to","Card","width","Img","variant","src","process","image","height","Body","Title","Text","desc","Cook","LearnCol","learnListJSON","item","title","Learn","PageNotFound","SingleRecipePage","useParams","find","current","undefined","Row","noGutters","Col","alt","ImgOverlay","ing","timePrep","timeCook","servings","diff","prep","SingleLearn","learn","Container","url","frameborder","allow","allowfullscreen","checkFields","nameField","ingredientsField","addinfoField","prepField","check","value","border","alert","window","location","Create","rows","cols","App","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0b40f35d.chunk.js","sourcesContent":["import './css/Navbar.css'\nimport {MdHelpOutline} from \"react-icons/md\";\nfunction colourChangeClick(id) {\n    document.getElementById(id).style.backgroundColor = \"white\";\n    const navButtonIDList = [\"cookNav\", \"learnNav\", \"createNav\"];\n    for (let currentID of navButtonIDList){\n        document.getElementById(currentID).style.color = \"black\";\n    }\n    document.getElementById(id).style.color = \"orange\";\n    \n}\n\nfunction colourChangeHover(id){\n    var currentColor = document.getElementById(id).style.color;\n    if (currentColor !== \"orange\"){\n        document.getElementById(id).style.backgroundColor = \"orange\";\n    }\n\n}\n\nfunction colourChangeOff(id){\n    document.getElementById(id).style.backgroundColor = \"white\";  \n}\n\nconst Navbar = () => {\n    return ( \n        <nav className=\"navbar\">\n            <h1><span style={{color:'orange', fontWeight:'bold'}}>EZ</span>cook</h1>\n            <div className=\"links\">\n\n                <a href=\"#/cook\" id=\"cookNav\" style={{color:\"orange\"}} \n                    onClick={(e) => colourChangeClick(e.target.id)}\n                    onMouseOver={(e) => colourChangeHover(e.target.id)}\n                    onMouseOut={(e) => colourChangeOff(e.target.id) }\n                    >Cook</a>\n\n                <a href=\"#/learn\" id=\"learnNav\" \n                    onClick={(e) => colourChangeClick(e.target.id)}\n                    onMouseOver={(e) => colourChangeHover(e.target.id)}\n                    onMouseOut={(e) => colourChangeOff(e.target.id)}\n                >Learn</a>\n\n                <a href=\"#/create\" id=\"createNav\" \n                    onClick={(e) => colourChangeClick(e.target.id)}\n                    onMouseOver={(e) => colourChangeHover(e.target.id)}\n                    onMouseOut={(e) => colourChangeOff(e.target.id)}\n                >Create</a>\n            </div>\n\n            <div className=\"extra\">\n                <div className=\"helpNav\"><MdHelpOutline/></div>\n                <input className=\"searchNav\" placeholder=\"Search...\" type=\"text\" name=\"\" id=\"\" />\n            </div>\n            \n        </nav>\n    );\n}\n \nexport default Navbar","import './css/RecipeRow.css'\nimport recipeListJSON from '../data/recipes.json'\n\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst RecipeRow = (props) => {\n    const name = props.name;\n    const filterType = props.filterType\n    return (  \n        <div className=\"recipeRowMain\">\n            <div className=\"rowName\">{name}</div>\n                <div className=\"recipeRowSub\">\n                    {recipeListJSON.filter(\n                        function (recipe){\n                            if (filterType === \"trending\"){\n                                return recipe.trending;\n                            }\n                            else if (filterType === \"favourite\"){\n                                return recipe.favourite;\n                            }\n                            else{\n                                return recipe;\n                            }\n                        }\n\n                    ).map( (recipe) =>(\n                        <div className=\"singleRecipe\">\n                            <Link to={`/cook/${recipe.id}`}>\n                                <Card key={recipe.id} style={{ width: '16 rem' }} >\n                                    <Card.Img variant=\"top\" src={  process.env.PUBLIC_URL+\"/\"+recipe.image} style={{ width: '20rem', height:'15rem' }} />\n                                    <Card.Body>\n                                        <Card.Title> <div className=\"recipeCardTitle\">{recipe.name}</div> </Card.Title>\n                                        <Card.Text>\n                                            <div className=\"recipeCardText\">{recipe.desc}</div>\n                                        </Card.Text>\n                                    </Card.Body>\n                                </Card>\n                            </Link>\n                        </div>\n                    ))}\n                </div>\n        </div>\n    );\n}\n \nexport default RecipeRow;","import RecipeRow from \"./RecipeRow\"\n\nconst Cook = () => {\n    return (  \n        <div className=\"cook\">\n            <br></br>\n            <RecipeRow name=\"Trending\" filterType=\"trending\"></RecipeRow>\n            <br></br>\n            <RecipeRow name=\"Favourite\" filterType=\"favourite\"></RecipeRow>\n        </div>\n    );\n}\n\n \nexport default Cook;\n","import learnListJSON from '../data/learn.json'\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './css/LearnCol.css';\n\nconst LearnCol = (props) => {\n    const name = props.name;\n    return ( \n        <div className=\"LearnColMain\">\n            <br></br>\n            <div className=\"colName\">{name}</div>\n            <div className=\"LearnColSub\">\n                {learnListJSON.map( (item) =>(\n                    <div className=\"singleLearn\">\n                        <Link to={`/learn/${item.id}`}>\n                            <Card key={item.id} >\n                                <Card.Body>\n                                    <Card.Title> <div className=\"learnCardTitle\">{item.title}</div> </Card.Title>\n                                    <Card.Text>\n                                        <div className=\"learnCardText\">{item.desc}</div>\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </Link>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n \nexport default LearnCol;","import LearnCol from \"./LearnCol\"\nconst Learn = () => {\n    return ( \n        <div className=\"learn\">\n            <LearnCol name=\"Popular Videos\"/>\n        </div>\n     );\n}\n \nexport default Learn;\n","import './css/PageNotFound.css';\nimport {Link } from \"react-router-dom\";\nconst PageNotFound = () => {\n    return (\n        <div className=\"pagenotfound\">\n            <div className=\"errorTitle\">Page does not exist!</div>\n            <div className=\"errorText\">Most likely a broken link... <Link to=\"/cook\">Click here to go back</Link></div>\n        </div>\n    );\n}\n \nexport default PageNotFound;","import { useParams } from \"react-router-dom\";\nimport recipeListJSON from '../data/recipes.json';\nimport PageNotFound from '../Base/PageNotFound';\nimport './css/SingleRecipePage.css'\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\n\nconst SingleRecipePage = () => {\n    const {id} = useParams();\n    \n    const recipe = recipeListJSON.find(\n        (current) => current.id == id\n    )\n\n    if (recipe == undefined){\n        return(\n            <PageNotFound></PageNotFound>\n        )\n\n    }\n\n    else{\n        return ( \n            <div className=\"singleRecipeBase\">\n                    <Row noGutters={true}>\n                        <Col>\n                            <Card className=\"bg-white text-white\">\n                                <Card.Img src={  process.env.PUBLIC_URL+\"/\"+recipe.image} alt=\"Card image\" />\n                                <Card.ImgOverlay>\n                                    <Card.Title><h1>{recipe.name}</h1></Card.Title>\n                                    <Card.Text>\n                                    <h4>{recipe.desc}</h4>\n                                    </Card.Text>\n                                </Card.ImgOverlay>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                    <br>\n                    </br>\n\n                    <Row noGutters={true}>\n                        <Col>\n                            <div className=\"singleRecipeSub\">\n                                <h1>Ingredients</h1>\n                                <ul>\n                                    {recipe.ing.map(\n                                        current => ( <li>{current}</li> )\n                                    )}\n\n                                </ul>\n                                \n                            </div> \n                        </Col>\n                        <Col>\n                            <div className=\"singleRecipeSub\">\n                                <h1>Aditional Info</h1>\n                                <ul>\n                                    <li><b>Total Time:</b> {recipe.timePrep + recipe.timeCook} min(s)</li>\n                                    <ul>\n                                        <li>Prep Time: {recipe.timePrep} min(s)</li>\n                                        <li>Cook Time: {recipe.timeCook} min(s)</li>\n                                    </ul>\n                                    <li><b>Service Size:</b> {recipe.servings}</li>\n                                    <li><b>Difficulty:</b> {recipe.diff} </li>\n                                </ul>\n                            </div>\n                        </Col>\n                    </Row>\n\n                    <br></br>\n\n                    <Row noGutters={true}>\n                        <Col>\n                            <div className=\"prepBorder\">\n                                <div className=\"singleRecipeSub\">\n                                    <h1>Preperation</h1>\n                                    <ol>\n                                        {recipe.prep.map(\n                                            current => ( <li>{current}</li> )\n                                        )}\n\n                                    </ol>\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n            </div>\n        );\n    }\n\n    \n}\n \nexport default SingleRecipePage;","import { useParams } from \"react-router-dom\";\nimport learnListJSON from '../data/learn.json';\nimport PageNotFound from '../Base/PageNotFound';\nimport './css/SingleLearn.css'\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\n\n\nconst SingleLearn = () => {\n\n    const {id} = useParams();\n    \n    const learn = learnListJSON.find(\n        (current) => current.id == id\n    )\n\n    if (learn == undefined){\n        return(\n            <PageNotFound></PageNotFound>\n        )\n\n    }\n    else{\n        return (\n            <div className=\"SingleLearnMain\">\n                <br />\n                <Container>\n                    <Row>\n                        <div className=\"learnTitle\">\n                            {learn.title}\n                        </div>\n                    </Row>\n\n                    \n\n                    <Row>\n                    <iframe className=\"videoFrame\" width=\"560\" height=\"315\" src={learn.url} \n                        title={learn.title}\n                        frameborder=\"0\" \n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n                        allowfullscreen></iframe>\n                    </Row>\n\n                    <br/>\n\n                    <Row>\n                        <div className=\"learnDesc\">\n                            {learn.desc}\n                        </div>\n                    </Row>\n                </Container>\n            </div>\n\n        );\n\n    }\n    \n}\n \nexport default SingleLearn;","import { Prompt } from 'react-router'\nimport './css/Create.css';\nimport { Col, Row } from \"react-bootstrap\";\n\nconst Create = () => {\n    return (  \n        <div className=\"createMain\">\n            <br />\n            <div className=\"newRecipeTitle\">\n            New Recipe\n            </div>\n\n            <br />\n            <div className=\"createSub\">\n                <Row noGutters={true}>\n                    <Col>\n                        <Row>\n                            <label>\n                                <div className=\"inputSubHead\">Name:</div>\n                                <input className=\"createName\" type=\"text\" width=\"80px\" id=\"createName\" name=\"name\"></input>\n                            </label>\n                        </Row>\n\n                        <Row>\n                            <label>\n                                <div className=\"inputSubHead\">Ingredients:</div>\n\n                                <textarea className=\"createIngredients\" rows=\"10\" cols= \"10\"  id=\"createIngredients\" name=\"ingredients\"></textarea>\n                            </label>\n                        </Row>\n\n                        <Row>\n                            <label>\n                                <div className=\"inputSubHead\">Additional Information:</div>\n\n                                <textarea className=\"createAddInfo\" rows=\"10\" cols= \"10\" id=\"createAddInfo\" name=\"addinfo\"></textarea>\n                            </label>\n                        </Row>\n\n                        \n                    </Col>\n\n                    <Col>\n                        <label>\n                            <div className=\"inputSubHead\">Preperation:</div>\n\n                            <textarea className=\"createPrep\" rows=\"25\" cols= \"10\" id=\"createPrep\" name=\"preperation\"></textarea>\n                        </label>\n                    </Col>\n                </Row>\n\n                <Row >\n                    <input className=\"createSubmit\" type=\"button\" value=\"Submit\" onClick={checkFields}/>\n                </Row>\n            </div>\n        </div>\n    );\n}\n\nfunction checkFields() {\n    var nameField = document.getElementById('createName');\n    var ingredientsField = document.getElementById('createIngredients');\n    var addinfoField = document.getElementById('createAddInfo');\n    var prepField = document.getElementById('createPrep');\n\n    var check = true;\n\n    if (nameField.value == \"\"){\n        check = false;\n        nameField.style.border = \"1.25px solid red\";\n    }\n\n    if (ingredientsField.value == \"\"){\n        check = false;\n        ingredientsField.style.border = \"1.25px solid red\";\n    }\n\n\n    if (addinfoField.value == \"\"){\n        check = false;\n        addinfoField.style.border = \"1.25px solid red\";\n    }\n\n    if (prepField.value == \"\"){\n        check = false;\n        prepField.style.border = \"1.25px solid red\";\n    }\n\n\n    if (check){\n        alert(\"Your recipe has been sent for review\");\n        window.location.href='#/cook';\n    }\n\n    else{\n        alert(\"Please fix the offending area(s)\");\n        \n    }\n    \n}\n\nexport default Create;","import Navbar from './Base/Navbar';\nimport Cook from './Cook/Cook';\nimport Learn from './Learn/Learn';\n\nimport PageNotFound from './Base/PageNotFound';\n\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport SingleRecipePage from './Cook/SingleRecipePage';\nimport SingleLearn from './Learn/SingleLearn';\nimport Create from './Create/Create';\n\n\nfunction App() {\n  return (\n      <Router >\n        <div className=\"App\">\n          <Navbar/> \n          <div className=\"content\">\n            <Switch>\n              \n                <Route exact path=\"/cook\">\n                  <Cook />\n                </Route>\n                <Route exact path=\"/cook/:id\">\n                  <SingleRecipePage />\n                </Route>\n\n                <Route exact path=\"/learn\">\n                  <Learn />\n                </Route>\n                <Route exact path=\"/learn/:id\">\n                  <SingleLearn />\n                </Route>\n\n                <Route exact path=\"/create\">\n                  <Create />\n                </Route>\n\n                <Route exact path=\"/\">\n                  <Cook />\n                </Route>\n                <Route path=\"*\">\n                  <PageNotFound />\n                </Route>\n\n            </Switch>\n            \n          </div>\n        </div>\n      </Router>\n\n\n  );\n\n\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}