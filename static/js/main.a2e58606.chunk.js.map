{"version":3,"sources":["Base/Navbar.js","Cook/RecipeRow.js","Cook/Cook.js","Learn/Learn.js","Base/PageNotFound.js","Cook/SingleRecipePage.js","App.js","index.js"],"names":["colourChangeClick","id","document","getElementById","style","backgroundColor","currentID","color","colourChangeHover","colourChangeOff","Navbar","className","fontWeight","href","onClick","e","target","onMouseOver","onMouseOut","placeholder","type","name","RecipeRow","props","filterType","recipeListJSON","filter","recipe","trending","favourite","map","to","Card","width","Img","variant","src","process","image","height","Body","Title","Text","desc","Cook","Learn","PageNotFound","SingleRecipePage","useParams","find","current","undefined","Row","noGutters","Col","alt","ImgOverlay","ing","timePrep","timeCook","servings","diff","prep","App","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a2e58606.chunk.js","sourcesContent":["import './css/Navbar.css'\nimport {MdHelpOutline} from \"react-icons/md\";\nfunction colourChangeClick(id) {\n    document.getElementById(id).style.backgroundColor = \"white\";\n    const navButtonIDList = [\"cookNav\", \"learnNav\", \"createNav\"];\n    for (let currentID of navButtonIDList){\n        document.getElementById(currentID).style.color = \"black\";\n    }\n    document.getElementById(id).style.color = \"orange\";\n    \n}\n\nfunction colourChangeHover(id){\n    var currentColor = document.getElementById(id).style.color;\n    if (currentColor !== \"orange\"){\n        document.getElementById(id).style.backgroundColor = \"orange\";\n    }\n\n}\n\nfunction colourChangeOff(id){\n    document.getElementById(id).style.backgroundColor = \"white\";  \n}\n\nconst Navbar = () => {\n    return ( \n        <nav className=\"navbar\">\n            <h1><span style={{color:'orange', fontWeight:'bold'}}>EZ</span>cook</h1>\n            <div className=\"links\">\n\n                <a href=\"#/cook\" id=\"cookNav\" style={{color:\"orange\"}} \n                    onClick={(e) => colourChangeClick(e.target.id)}\n                    onMouseOver={(e) => colourChangeHover(e.target.id)}\n                    onMouseOut={(e) => colourChangeOff(e.target.id) }\n                    >Cook</a>\n\n                <a href=\"#/learn\" id=\"learnNav\" \n                    onClick={(e) => colourChangeClick(e.target.id)}\n                    onMouseOver={(e) => colourChangeHover(e.target.id)}\n                    onMouseOut={(e) => colourChangeOff(e.target.id)}\n                >Learn</a>\n\n                <a href=\"#/create\" id=\"createNav\" \n                    onClick={(e) => colourChangeClick(e.target.id)}\n                    onMouseOver={(e) => colourChangeHover(e.target.id)}\n                    onMouseOut={(e) => colourChangeOff(e.target.id)}\n                >Create</a>\n            </div>\n\n            <div className=\"extra\">\n                <div className=\"helpNav\"><MdHelpOutline/></div>\n                <input className=\"searchNav\" placeholder=\"Search...\" type=\"text\" name=\"\" id=\"\" />\n            </div>\n            \n        </nav>\n    );\n}\n \nexport default Navbar","import './css/RecipeRow.css'\nimport recipeListJSON from '../data/recipes.json'\n\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst RecipeRow = (props) => {\n    const name = props.name;\n    const filterType = props.filterType\n    return (  \n        <div className=\"recipeRowMain\">\n            <div className=\"rowName\">{name}</div>\n                <div className=\"recipeRowSub\">\n                    {recipeListJSON.filter(\n                        function (recipe){\n                            if (filterType === \"trending\"){\n                                return recipe.trending;\n                            }\n                            else if (filterType === \"favourite\"){\n                                return recipe.favourite;\n                            }\n                            else{\n                                return recipe;\n                            }\n                        }\n\n                    ).map( (recipe) =>(\n                        <div className=\"singleRecipe\">\n                            <Link to={`/cook/${recipe.id}`}>\n                                <Card key={recipe.id} style={{ width: '16 rem' }} >\n                                    <Card.Img variant=\"top\" src={  process.env.PUBLIC_URL+\"/\"+recipe.image} style={{ width: '20rem', height:'15rem' }} />\n                                    <Card.Body>\n                                        <Card.Title> <div className=\"recipeCardTitle\">{recipe.name}</div> </Card.Title>\n                                        <Card.Text>\n                                            <div className=\"recipeCardText\">{recipe.desc}</div>\n                                        </Card.Text>\n                                    </Card.Body>\n                                </Card>\n                            </Link>\n                        </div>\n                    ))}\n                </div>\n        </div>\n    );\n}\n \nexport default RecipeRow;","import RecipeRow from \"./RecipeRow\"\n\nconst Cook = () => {\n    return (  \n        <div className=\"cook\">\n            <br></br>\n            <RecipeRow name=\"Trending\" filterType=\"trending\"></RecipeRow>\n            <br></br>\n            <RecipeRow name=\"Favourite\" filterType=\"favourite\"></RecipeRow>\n        </div>\n    );\n}\n\n \nexport default Cook;\n","const Learn = () => {\n    return ( \n        <div className=\"learn\">\n            <h2>Learn</h2>\n        </div>\n     );\n}\n \nexport default Learn;\n","import './css/PageNotFound.css';\nimport {Link } from \"react-router-dom\";\nconst PageNotFound = () => {\n    return (\n        <div className=\"pagenotfound\">\n            <div className=\"errorTitle\">Page does not exist!</div>\n            <div className=\"errorText\">Most likely a broken link... <Link to=\"/cook\">Click here to go back</Link></div>\n        </div>\n    );\n}\n \nexport default PageNotFound;","import { useParams } from \"react-router-dom\";\nimport recipeListJSON from '../data/recipes.json';\nimport PageNotFound from '../Base/PageNotFound';\nimport './css/SingleRecipePage.css'\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\n\nconst SingleRecipePage = () => {\n    const {id} = useParams();\n    \n    const recipe = recipeListJSON.find(\n        (current) => current.id == id\n    )\n\n    if (recipe == undefined){\n        return(\n            <PageNotFound></PageNotFound>\n        )\n\n    }\n\n    else{\n        return ( \n            <div className=\"singleRecipeBase\">\n                    <Row noGutters={true}>\n                        <Col>\n                            <Card className=\"bg-dark text-white\">\n                                <Card.Img src={  process.env.PUBLIC_URL+\"/\"+recipe.image} alt=\"Card image\" />\n                                <Card.ImgOverlay>\n                                    <Card.Title><h1>{recipe.name}</h1></Card.Title>\n                                    <Card.Text>\n                                    <h4>{recipe.desc}</h4>\n                                    </Card.Text>\n                                </Card.ImgOverlay>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                    <br>\n                    </br>\n\n                    <Row noGutters={true}>\n                        <Col>\n                            <div className=\"singleRecipeSub\">\n                                <h1>Ingredients</h1>\n                                <ul>\n                                    {recipe.ing.map(\n                                        current => ( <li>{current}</li> )\n                                    )}\n\n                                </ul>\n                                \n                            </div> \n                        </Col>\n                        <Col>\n                            <div className=\"singleRecipeSub\">\n                                <h1>Aditional Info</h1>\n                                <ul>\n                                    <li><b>Total Time:</b> {recipe.timePrep + recipe.timeCook} min(s)</li>\n                                    <ul>\n                                        <li>Prep Time: {recipe.timePrep} min(s)</li>\n                                        <li>Cook Time: {recipe.timeCook} min(s)</li>\n                                    </ul>\n                                    <li><b>Service Size:</b> {recipe.servings}</li>\n                                    <li><b>Difficulty:</b> {recipe.diff} </li>\n                                </ul>\n                            </div>\n                        </Col>\n                    </Row>\n\n                    <br></br>\n\n                    <Row noGutters={true}>\n                        <Col>\n                            <div className=\"prepBorder\">\n                                <div className=\"singleRecipeSub\">\n                                    <h1>Preperation</h1>\n                                    <ol>\n                                        {recipe.prep.map(\n                                            current => ( <li>{current}</li> )\n                                        )}\n\n                                    </ol>\n                                </div>\n                            </div>\n                        </Col>\n                    </Row>\n            </div>\n        );\n    }\n\n    \n}\n \nexport default SingleRecipePage;","import Navbar from './Base/Navbar';\nimport Cook from './Cook/Cook';\nimport Learn from './Learn/Learn';\n\nimport PageNotFound from './Base/PageNotFound';\n\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport SingleRecipePage from './Cook/SingleRecipePage';\n\n\nfunction App() {\n  return (\n      <Router >\n        <div className=\"App\">\n          <Navbar/> \n          <div className=\"content\">\n            <Switch>\n              <Route exact path=\"/cook\">\n                  <Cook />\n                </Route>\n                <Route exact path=\"/cook/:id\">\n                  <SingleRecipePage />\n                </Route>\n                <Route exact path=\"/learn\">\n                  <Learn />\n                </Route>\n                <Route exact path=\"/\">\n                  <Cook />\n                </Route>\n                <Route path=\"*\">\n                  <PageNotFound />\n                </Route>\n\n            </Switch>\n            \n          </div>\n        </div>\n      </Router>\n\n\n  );\n\n\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}